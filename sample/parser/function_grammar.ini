function           = _ "function" _ identifier _
                            lpar _                
                            function_arguments _                
                            function_retvals _                
                            rpar
                            _ exp _
                       "end function" _
                    
function_arguments = args_groups_list / _

function_retvals   = ("returns" _ type_list) / _


args_groups_list   = arg_def_group (_ ";" _ arg_def_group)*

arg_def_group      = arg_def_list _ ":" _ type

if                 = "if" _ exp _ "then" _ exp _ "else" _ exp _ "end if"

arg_def_list       = identifier (_ "," _ identifier)*


operand            = call / identifier / number / brackets_algebraic / algebraic / exp
brackets_algebraic = (lpar _ algebraic _ rpar)  
identifier         = ~"[a-z_][a-z0-9_]*"i
number             = ~"[0-9]+"

exp                = if / algebraic / call / operand

algebraic          = (operand) (_ bin_op _ algebraic)*

call               = !("function" _) identifier _ lpar _ args_list _ rpar

args_list          = exp (_ "," _ exp)*

lpar               = "("
rpar               = ")"
_                  = ~"\s*"
bin_op             = "+" / "-" / "<" / ">" / "*" / "/" / "^"
type_list          = type (_ "," _ type)*

type               = ("array" _ "[" _ type  _"]") / std_type

std_type           = "integer" / "real"
